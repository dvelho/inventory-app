on:
  push:
    branches:
      - main
      - master
      - dev
      - stage
permissions:
  id-token: write
  contents: read #This is required for actions/checkout@v2
jobs:
  native_build:
    runs-on: ubuntu-latest
    name: Deploy Tenant Creation Service
    steps:
      - uses: actions/checkout@master
      - uses: dorny/paths-filter@master
        id: filter
        with:
          filters: |
            cognito.signup:
              - 'product/service/lambda-services/cognito/signup/**'
        #frontend:
        #- 'frontend/**'
        # I only need to declare environment variables once at the beginning
        # The subsequent steps can access the variables by default

      - name: Create Vars
        run: |  
          echo "TenantName=minka-cloud" >> $GITHUB_ENV
          echo "GeneralDomain=minka.cloud" >> $GITHUB_ENV
          echo "HostedZoneId=Z06530912SIRHBPLWQDWO" >> $GITHUB_ENV
          echo "CognitoDomain=auth.minka.cloud" >> $GITHUB_ENV

      - name: Configuration for master branch
        if: ${{ github.ref == 'refs/heads/master' }}
        # Side note, I can run any Linux converter here, not just 'echo' original -> echo "GCP_WIP=${{ secrets.MAIN_WIP }}" >> $GITHUB_ENV
        run: |
          echo "AWS_DEFAULT_REGION=eu-west-1" >> $GITHUB_ENV
          echo "STACK_NAME=sam-cognito-tenant-minka-cloud-dev-config" >> $GITHUB_ENV
          echo "S3_BUCKET_NAME=minka-cloud-dev-deployment" >> $GITHUB_ENV
          echo "environment=dev1" >> $GITHUB_ENV
      - name: Configuration for dev branch
        if: ${{ github.ref == 'refs/heads/dev' }}
        run: |
          echo "AWS_DEFAULT_REGION=us-east-1" >> $GITHUB_ENV
          echo "STACK_NAME=sam-cognito-tenant-minka-cloud-prod-config" >> $GITHUB_ENV
          echo "S3_BUCKET_NAME=minka-cloud-prod-deployment" >> $GITHUB_ENV
          echo "environment=prod1" >> $GITHUB_ENV

      - name: Branch name
        run: echo running on branch ${GITHUB_REF##*/}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: "GitHubActions"
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Config graalvm
        uses: graalvm/setup-graalvm@v1
        with:
            version: 'latest'
            java-version: '19'
            components: 'native-image'
      - name: Cache maven modules
        id: cache-maven
        uses: actions/cache@v3
        env:
          cache-name: cache-maven-modules
        with:
          path:  ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Maven Clean and Verify on Cognito Signup Lambda
        if: steps.filter.outputs.cognito.signup == 'true'
        run: |
          mvn -f product/service/lambda-services/cognito/signup/pom.xml -q install -Dnative -DskipTests
      - name: Upload Cognito Signup Lambda native app to S3
        if: steps.filter.outputs.cognito.signup == 'true'
        run: |
          aws s3 cp product/service/lambda-services/cognito/signup/target/function.zip s3://${{env.S3_BUCKET_NAME}}/product/service/lambda-services/cognito/signup/target/function.zip
        ## --exclude "*" --include "*.zip"
      - name: Sam build
        run: |
          sam build --template infrastructure/tenant-auth-config.yaml
      - name: Sam deploy
        run: |
          sam deploy --template-file .aws-sam/build/template.yaml --resolve-s3 \
            --stack-name ${{env.STACK_NAME}} \
            --capabilities CAPABILITY_IAM CAPABILITY_AUTO_EXPAND CAPABILITY_NAMED_IAM --parameter-overrides \
            TenantName= ${{env.TenantName}} \
            GeneralDomain= ${{env.GeneralDomain}} \
            HostedZoneId= ${{env.HostedZoneId}} \
            CognitoDomain= ${{env.CognitoDomain}} \
            CertificateArn=arn:aws:acm:us-east-1:631674088803:certificate/0dfc0ddd-8e43-4662-adad-7b55df9bd9c2 \
            Environment= ${{env.environment}}      

      #- name: Invoke local native app
      #  run: |
      #    sam local invoke --template product/service/lambda-services/cognito/signup/target/sam.native.yaml --event payload.json
      # - name: Maven Clean and Verify on OrdersApiNative
      #   run: |
      #     mvn -f product/service/api-services/orders-api/pom.xml -q clean verify -Dnative -DskipTests
